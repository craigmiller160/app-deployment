apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicas | default 1 }}
  strategy:
    type: {{ .Values.deploymentStrategy | default "Recreate" }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          ports:
            {{- range $port := .Values.ports }}
            - name: {{ $port.name | default "port" }}
              containerPort: {{ $port.containerPort }}
              protocol: {{ $port.protocol | default "TCP" }}
            {{- end}}
          envFrom:
            {{- range $configmap := .Values.configMaps  }}
            - configMapRef:
                name: {{ $configmap }}
            {{- end}}
          env:
            {{- range $secret := .Values.secrets  }}
            - name: {{ $secret.envVariable }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.secretName }}
                  key: {{ $secret.secretKey }}
            {{- end}}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{ .Values.livenessProbe | toYaml | trim | nindent 12 }}
            initialDelaySeconds: 30
            periodSeconds: 300
          {{- end}}
          volumeMounts:
            {{- range $volume := .Values.volumes }}
            - mountPath: {{ $volume.deploymentMountPath }}
              name: {{ $volume.name }}
            {{- end }}
      volumes:
        {{- range $volume := .Values.volumes }}
        - name: {{ $volume.name }}
          {{- if eq $volume.type "PVC" }}
          persistentVolumeClaim:
            claimName: {{ $volume.name }}
          {{- else if eq $volume.type "HostPath" }}
          hostPath:
            path: {{ $volume.hostPath }}
          {{- end }}
        {{- end }}